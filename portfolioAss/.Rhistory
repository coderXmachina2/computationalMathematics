cat("Max Morning Productivity: ", max(myData$Morning.Productivity))
cat("Mean Morning Productivity: ", mean(myData$Morning.Productivity))
cat("Max Night Productivity: ", max(myData$Night.Time.Productivity))
cat("Mean Night Productivity: ", mean(myData$Night.Time.Productivity))
print("Preliminary Eyeball Data: ")
cat("Max Morning Productivity: ", max(myData$Morning.Productivity))
cat("Mean Morning Productivity: ", mean(myData$Morning.Productivity), "\n")
cat("Max Night Productivity: ", max(myData$Night.Time.Productivity), "\n")
cat("Mean Night Productivity: ", mean(myData$Night.Time.Productivity))
print("Preliminary Eyeball Data: ")
cat("Max Morning Productivity: ", max(myData$Morning.Productivity), "\n")
cat("Mean Morning Productivity: ", mean(myData$Morning.Productivity), "\n\n")
cat("Max Night Productivity: ", max(myData$Night.Time.Productivity), "\n")
cat("Mean Night Productivity: ", mean(myData$Night.Time.Productivity))
t.test(myData$Morning.Productivity, myData$Night.Time.Productivity)
View(myData)
View(myData)
t.test(myData$Morning.Productivity, myData$Night.Time.Productivity, paired=TRUE)
myData <- read.csv('./data/sleepCoffeeProductivity.csv')
cat("Is data a dataframe: ", is.data.frame(myData), "\n")
cat("Dataset Contains: ", ncol(myData), " Attributes\n")
cat("Dataset Contains: ", nrow(myData), " Instances")
View(myData)
myData <- read.csv('./data/sleepCoffeeProductivity.csv')
cat("Is data a dataframe: ", is.data.frame(myData), "\n")
cat("Dataset Contains: ", ncol(myData), " Attributes\n")
cat("Dataset Contains: ", nrow(myData), " Instances")
print("Preliminary Eyeball Data: ")
cat("Max Morning Productivity: ", max(myData$Morning.Productivity), "\n")
cat("Mean Morning Productivity: ", mean(myData$Morning.Productivity), "\n\n")
cat("Max Night Productivity: ", max(myData$Night.Time.Productivity), "\n")
cat("Mean Night Productivity: ", mean(myData$Night.Time.Productivity))
print("Preliminary Eyeball Data: ")
cat("Max Morning Productivity: ", max(myData$Day.Productivity), "\n")
cat("Mean Morning Productivity: ", mean(myData$Day.Productivity), "\n\n")
cat("Max Night Productivity: ", max(myData$Night.Time.Productivity), "\n")
cat("Mean Night Productivity: ", mean(myData$Night.Time.Productivity))
t.test(myData$Day.Productivity, myData$Night.Time.Productivity, paired=TRUE)
dhyper(4,10,25,9)
dhyper(4,10,25,9)
sum(dhyper(4,10,25,9))
dhyper(4,10,25,9)
sum(dhyper(4:10,25,9))
dhyper(4,10,25,9)
sum(dhyper(4:10, 10,25,9))
dhyper(4,10,25,9)
addictP <- sum(dhyper(4:10, 10,25,9))
print("Our P value to test for addiction is: ", addictP)
dhyper(4,10,25,9)
addictP <- sum(dhyper(4:10, 10,25,9))
cat("Our P value to test for addiction is: ", addictP)
addictP <- sum(dhyper(4:10, 10,25,9))
cat("Our P value to test for addiction is: ", addictP, " Our p value is: "addictP*100)
addictP <- sum(dhyper(4:10, 10,25,9))
cat("Our P value to test for addiction is: ", addictP, " Our p value is: ", addictP*100)
addictP <- sum(dhyper(4:10, 10,25,9))
cat("Our P value to test for addiction is: ", addictP, " Our p value is: ", addictP*100, "%")
#Verify
x <- 0:10
plot(x, dhyper(x,10,25,9),type='h',lwd=4,col=c(rep("black",5),rep("red",3)))
legend("topright",lwd=4, col=c("black","red"),legend=c("regular points","more extreme"))
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(a) <- list (week=c("End","Day"),drinkingHabit=c("Substance Abuse","Normal") )
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),drinkingHabit=c("Substance Abuse","Normal") )
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),drinkingHabit=c("Substance Abuse","Normal") )
addictMatrix
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),  drinkingHabit=c("Substance Abuse","Normal") )
addictMatrix
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),  drinkingHabit=c("Abuse","Normal") )
addictMatrix
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),  drinkingHabit=c("Abuse","Normal") )
addictMatrix
fisher.test(a, alternative="greater")
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),  drinkingHabit=c("Abuse","Normal") )
addictMatrix
fisher.test(addictMatrix, alternative="greater")
addictMatrix <- matrix(c(4,6,5,20),2,2,byrow=TRUE)
dimnames(addictMatrix) <- list (week=c("End","Day"),  drinkingHabit=c("Abuse","Normal") )
addictMatrix
fisher.test(addictMatrix, alternative="greater")
mean(myData$Total.Daily.Productivity)
dpois(3,lambda)
lambdaSeq <- seq(from = 0, to = 3 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
lambdaSeq <- seq(from = 0, to = 4 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
lambdaSeq <- seq(from = 0, to = 6 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
lambdaSeq <- seq(from = 0, to = 6 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
abline(v = 2.84)
lambdaSeq <- seq(from = 0, to = 5 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
abline(v = 2.84)
lambdaSeq <- seq(from = 0, to = 5 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
abline(v = lambda )
lambda <- mean(myData$Total.Daily.Productivity)
lambda <- mean(myData$Total.Daily.Productivity)
lambdaSeq <- seq(from = 0, to = 5 , len = 100)
plot(lambdaSeq, dpois(3,lambdaSeq), main = "likelihood for lambda")
abline(v = lambda )
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambda,supp-max(supp),main='support function for lambda'))
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambda,suppCurve-max(suppCurve),main='support function for lambda'))
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambda,suppCurve-max(suppCurve),main='support function for lambda')
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambdaSeq,suppCurve-max(suppCurve),main='support function for lambda')
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambdaSeq,suppCurve-max(suppCurve),main='support function for lambda')
abline(v=lambda)
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambdaSeq,suppCurve-max(suppCurve),main='support function for lambda')
abline(v=lambda)
cat("We can infer from the dataset that lambda = ", lambda, " is bang on the money")
suppCurve <- dpois(3, lambdaSeq, log = TRUE)
plot(lambdaSeq,suppCurve-max(suppCurve),main='support function for lambda')
abline(v=lambda)
critcalObs <- qpois(0.95, 2.83)
pVal <- ppois(critcalObs,lambdaParam2)
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
pVal
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois(lambdaSeq, lambda ),
main = Distribution, xlim=c(-2,20)) normden <- function(x){dnorm(x, mean=ambda, sd=sqrt(ambda))} curve(normden, from=-4, to=20, add=TRUE, col=)
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois(lambdaSeq, lambda ),
main = Distribution, xlim=c(-2,20)) normden <- function(x){dnorm(x, mean=ambda, sd=sqrt(ambda))} curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois( lambdaSeq , lambda ), xlim=c(-2,6))
normden <- function(x){dnorm(x, mean=6, sd=sqrt(6))}
curve(normden, from=-2, to=6, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois( lambdaSeq , lambda ), xlim=c(-2,6))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-2, to=6, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois( lambdaSeq , 3 ), xlim=c(-2,6))
normden <- function(x){dnorm(x, mean=3, sd=sqrt(3))}
curve(normden, from=-2, to=6, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:20, dpois( x=0:20, lambda=6 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=6, sd=sqrt(6))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:20, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(lambdaSeq, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:7, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:7, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,7))
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:7, dpois( x=0:7, lambda=2.83 ), xlim=c(-2,7))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:7, dpois( x=0:7, lambda=2.83 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:20, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:20, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="red")
abline(v=critcalObs, col = "red" )
critcalObs <- qpois(0.95, lambda )
pVal <- ppois(critcalObs,lambda )
plot(0:20, dpois( x=0:20, lambda=2.83 ), xlim=c(-2,20))
normden <- function(x){dnorm(x, mean=2.83, sd=sqrt(2.83))}
curve(normden, from=-4, to=20, add=TRUE, col="purple")
abline(v=critcalObs, col = "red" )
abline(v=3, col = "blue")
max(myData$Sleep.Time)
for (i in 2010:2015){
print(paste("The year is", i))
}
for(row in 1:nrow(myData$Sleep.Time)){
print(myData$Sleep.Time[row])
}
for(row in 1:nrow(myData)){
print(myData[row, "Sleep.Time"])
}
as.POSIXlt(myData$Sleep.Time)
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
tstTime <- chron(myData$Sleep.Time[1])
library(chron)
install.packages("chron")
library(chron)
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
tstTime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1)
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
#tstTime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
# <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(data)
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time)
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
sleepTImeCol <- chron(sleepTImeCol,format=c('h:m:s'))
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
sleepTImeCol <- chron(sleepTImeCol,format=c('h:m:s'))
max(sleepTImeCol)
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
sleepTImeCol <- chron(sleepTImeCol,format=c('h:m:s'))
max(sleepTImeCol,format=c('h:m:s'))
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
sleepTImeCol <- chron(sleepTImeCol)
sleepTImeCol
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
typeof((sleepTImeCol))
sleepTImeCol <- chron(sleepTImeCol,format=c('h:m:s'))
max(sleepTImeCol,format=c('h:m:s'))
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
typeof((sleepTImeCol))
sleepTImeCol <- chron(sleepTImeCol,format=c('h:m:s'))
max(sleepTImeCol,format=c('h:m:s'))
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
typeof((sleepTImeCol))
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
sleepTImeCol <- as.numeric(myData$Sleep.Time) #create a numeric column
typeof((sleepTImeCol))
sleepTImeCol
#ttime <- chron(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
typeof(myData$Sleep.Time[1])
t <- chron(myData$Sleep.Time,format=c('h:m:s'))
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
max(myData$Sleep.Time[1])
#for(row in 1:nrow(myData$Sleep.Time)){
#  print(myData$Sleep.Time[1])
#}
max(myData$Sleep.Time)
as.POSIXlt(myData$Sleep.Time)
test <- as.POSIXlt(as.Date(myData$Sleep.Time))
a <- as.Date(myData$Sleep.Time)
typeof(myData$Sleep.Time)
a <- as.Date(myData$Sleep.Time)
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
myData <- read.csv('./data/sleepCoffeeProductivity.csv')
cat("Is data a dataframe: ", is.data.frame(myData), "\n")
cat("Dataset Contains: ", ncol(myData), " Attributes\n")
cat("Dataset Contains: ", nrow(myData), " Instances")
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
max(myData$Sleep.Time)
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
max(myData$Sleep.Time)
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
try <- format(as.POSIXct(myData$Sleep.Time[1],format="%H:%M:%S"),"%H%M%S")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
try <- format(as.POSIXct(myData$Sleep.Time[1],format="%H:%M:%S"),"%H%M%S")
try
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
try <- format(as.POSIXct(myData$Sleep.Time[1],format="%H:%M:%S"),"%H%M%S")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%H:%M:%S"),"%H%M%S")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
try <- format(as.POSIXct(myData$Sleep.Time[1],format="%H:%M:%S"),"%H%M%S")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%H:%M:%S"),"%H%M%S")
sleepTImeCol
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
try <- format(as.POSIXct(myData$Sleep.Time[1],format="%H:%M:%S"),"%H%M%S")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%H:%M:%S"),"%H%M%S")
sleepTImeCol
max(sleepTImeCol)
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%H:%M:%S"),"%H%M%S")
sleepTImeCol
max(sleepTImeCol)
min(sleepTImeCol)
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%:%M:%S"),"%H%M%S")
sleepTImeCol
max(sleepTImeCol)
min(sleepTImeCol)
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
max(sleepTImeCol)
min(sleepTImeCol)
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time[1]
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Tie
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
myData$Sleep.Time
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
cat("\n")
myData$Sleep.Time
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
cat("\n")
myData$Sleep.Time
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
head(sleepTImeCol)
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
cat("\n")
myData$Sleep.Time
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
head(sleepTImeCol)
tail(sleepTImeCol)
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
typeof(myData$Sleep.Time)
cat("\n")
myData$Sleep.Time
#max(myData$Sleep.Time)
cat("\n")
sleepTImeCol <- format(as.POSIXct(myData$Sleep.Time,format="%l:%M:%S"),"%H%M%S")
sleepTImeCol
cat("\n")
head(sleepTImeCol)
cat("\n\n\n\n")
tail(sleepTImeCol)
cat("\n")
max(sleepTImeCol)
min(sleepTImeCol)
cat("\n")
# <- as.Date(myData$Sleep.Time)
#test <- as.POSIXlt(as.Date(myData$Sleep.Time))
